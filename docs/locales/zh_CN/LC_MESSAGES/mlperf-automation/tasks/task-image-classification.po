# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2020 Grigori Fursin and the cTuning foundation
# This file is distributed under the same license as the Collective
# Knowledge framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Collective Knowledge framework 2.6.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-21 10:06+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../mlperf-automation/tasks/task-image-classification.md:1
msgid "[ TOC ]"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:3
msgid "MLPerf™ Inference v1.0: image classification"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:5
msgid "Official models"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:7
msgid ""
"| model | reference app | framework | dataset | | ---- | ---- | ---- | "
"---- | | resnet50-v1.5 | vision/classification_and_detection | "
"tensorflow, pytorch, onnx | imagenet2012 [CK automation] |"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:11
msgid "All supported models"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:13
msgid ""
"| model | framework | accuracy | dataset | model link | model source | "
"precision | notes | CK dataset | CK model | CK model package tags | | "
"---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | "
"---- | | resnet50-v1.5 | tensorflow | 76.456% | imagenet2012 validation |"
" from zenodo | mlperf, tensorflow | fp32 | NHWC. More information on "
"resnet50 v1.5 can be found here.||   |   |   | | resnet50-v1.5 | onnx | "
"76.456% | imagenet2012 validation | from zenodo: opset-8, opset-11 | from"
" zenodo converted with this script | fp32 | NCHW, tested on pytorch and "
"onnxruntime |   | link  | model,image-classification,mlperf,onnx,resnet50"
"  | | resnet50-v1.5 | pytorch | 76.014% | imagenet2012 validation | from "
"zenodo | from TorchVision | fp32 | NCHW |   |   |   | | resnet50-v1.5 | "
"pytorch | 75.790% | imagenet2012 validation | from zenodo | Edgecortix "
"quantization script | A: int8, W: uint8 | NCHW |   |   |   |"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:22
msgid "Common CK setup"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:28
msgid ""
"We suggest you to create a virtual CK environment using MLPerf™ inference"
" v1.1 template (with the TVM backend from OctoML) as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:39
msgid "Note that you need Python 3.6+ for the MLPerf inference benchmark."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:41
msgid ""
"Alternatively, use the following commands if you want to use your native "
"environment:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:71
msgid ""
"You can explore available packages in the CK GitHub repo or using the "
"cKnowledge.io platform."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:74
msgid "Pull CK repo with the latest MLPerf™ automations from OctoML:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:79
msgid ""
"CK will pull and install GitHub repository from "
"https://github.com/mlcommons/ck-mlops. Note that you can pull any Git "
"repository in the CK format as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:85
msgid "CK setup for the ImageNet 2012 dataset"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:87
msgid ""
"You can install a reduced ImageNet 2012 data set with the first 500 "
"images to test MLPerf™ workflows as follows :"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:94
msgid ""
"Feel free to check the CK JSON meta and CK installation scripts for Linux"
" and Windows for the CK ImageNet val min package."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:99
msgid ""
"ImageNet 2012 validation set is no longer publicly available. If you "
"already have it installed on your machine, you can detect and register it"
" to work with CK workflows using this command:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:108
msgid ""
"You can also download it via Academic Torrents and then register in the "
"CK using the above command."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:111
msgid ""
"Please check this doc to see how you can preprocess the ImageNet in "
"multiple ways with the help of CK."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:114
msgid ""
"Feel free to check the CK JSON meta and CK Python customization script to"
" detect this data set on your machine."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:118
msgid ""
"You can see other software detection plugins in the CK repository or "
"using the cKnowledge.io platform."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:124
msgid "CK setup for different models and hardware"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:126
msgid "ONNX-based models for CPU"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:132
msgid ""
"You will be asked to select a specfic version or the latest one. You can "
"install a specific version as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:137
#: ../../mlperf-automation/tasks/task-image-classification.md:237
msgid "Install ResNet50 v1.5 fp32 for ONNX opset-8"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:143
#: ../../mlperf-automation/tasks/task-image-classification.md:151
msgid "Feel free to check CK JSON meta of this package."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:145
#: ../../mlperf-automation/tasks/task-image-classification.md:243
msgid "Install ResNet50 v1.5 fp32 for ONNX opset-11"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:156
#: ../../mlperf-automation/tasks/task-image-classification.md:250
msgid "Benchmark"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:158
#: ../../mlperf-automation/tasks/task-image-classification.md:252
msgid "First, check LOADGEN parameters for image classification here."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:164
msgid "CK will ask you to select a command line from:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:179
msgid "You can test accuracy in Offline mode for 500 images as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:184
msgid "You can test performance in SingleStream mode for 500 images as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:189
msgid ""
"Feel free to check the CK JSON meta and CK dependencies for this "
"benchmark!"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:192
msgid ""
"Note that you can obtain help about any CK module such as \"program\" and"
" action such as \"run\" as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:197
msgid "You can then customize your CMD using JSON keys as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:202
msgid "Record results to the CK repository"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:204
msgid ""
"You can record results to the CK repository for further analysis (for "
"example, using CK dashboards) as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:219
msgid ""
"Note that you can create a new CK repository to group your experimental "
"results as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:223
msgid ""
"and then substitute 'local' with 'my-cool-experiments' in the above CMD "
"to run the MLPerf™ benchmark."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:228
msgid "PyTorch-based models for CPU"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:230
msgid ""
"Note: seems that PyTorch implementation in MLPerf inference v1.0 "
"benchmark is not working with the latest ONNX"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:245
msgid "Note: ONNX opset-11 doesn't work with PyTorch in MLPerf inference v1.0"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:258
msgid "You can test it as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:267
msgid "Analyze experimental results"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:269
msgid ""
"You can find and check the CK entry with the results (based on FAIR "
"principles to make sure that results are reproducible) as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:274
msgid "or"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:280
msgid "You can see different experiments inside as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:285
msgid ""
"Note that you can process, analyze and visualize such CK results from "
"multiple experiments using Python scripts, CK modules and Jupyter "
"notebooks as shown in this Jupyter notebook example and CK dashboard."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:291
msgid "Share experimental results"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:293
msgid ""
"You can share experimental results publicly with the community or "
"privately between different workgroups in the CK repositories or pack "
"them to ZIP files:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:300
msgid ""
"This command will create ckr.zip with all CK experiment entries that you "
"can share with your colleagues. They can unzip this file into CK local "
"repository as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:306
msgid "You can also pack and share the whole CK repository as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:312
msgid "Delete unused virtual environments"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:314
msgid "You can delete an unused virtual CK environment as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:319
msgid "You can delete all virtual CK environments as follows:"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:325
msgid "Integration with web services and CI platforms"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:327
msgid ""
"All CK modules, automation actions and workflows are accessible as a "
"micro-service with a unified JSON I/O API to make it easier to integrate "
"them with web services and CI platforms as described here."
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:331
msgid "Questions and feedback"
msgstr ""

#: ../../mlperf-automation/tasks/task-image-classification.md:333
msgid "Contact: grigori@octoml.ai"
msgstr ""

